/* ****************************************************************************************************
 * test_cases_init.c within the following project: lib_thread
 *
 *  compiler:   GNU Tools ARM LINUX
 *  target:     armv6
 *  author:	    Tom
 * ****************************************************************************************************/

/* ****************************************************************************************************/

/*
 *	******************************* change log *******************************
 *  date			user			comment
 * 	11.09.2018			Tom			- creation of test_cases_init.h
 *
 */

/* *******************************************************************
 * includes
 * ******************************************************************/

/* frame */
#include <lib_convention__errno.h>

 /* project */
#include <test_cases.h>
${GEN_TEST_CASE_INCLUDES}

/* *******************************************************************
 * defines
 * ******************************************************************/
#define M_LIB_LIST_CONTEXT_ID			0
#define M_LIB_LIST_BASE_ADDR			0

/* *******************************************************************
 * static data
 * ******************************************************************/
static struct queue_attr s_test_case_list;


/* *******************************************************************
 * function definition
 * ******************************************************************/

/* *******************************************************************
 * \brief	Initialization of the subordinated test cases 
 * ---------
 * \remark  Start of the test cases startup hooks, necessary to register 
 *          at the superior "test_cases" framework 
 * ---------
 * \return	'0', if successful, < '0' if not successful
 * ******************************************************************/
int test_cases__init(void)
{   
    int ret;
    ret = lib_list__init(&s_test_case_list, M_LIB_LIST_CONTEXT_ID);
    if (ret < EOK) {
        return ret;
    }

${GEN_TEST_CASE_INIT_CALLS}
}

/* *******************************************************************
 * \brief   register unit test at the superior "test_cases" framework
 * ---------
 * \remark  Each of the test cases have to be registerd to be accessiable
 * ---------
 * \return	'0', if successful, < '0' if not successful
 * ******************************************************************/
int test_cases__register(test_case_instance_t *_test_case)
{
    int ret;
    if(_test_case == NULL) {
		 return -EPAR_NULL;
	}
    ret = lib_list__enqueue(&s_test_case_list,&_test_case->node,M_LIB_LIST_CONTEXT_ID,M_LIB_LIST_BASE_ADDR);
    return ret;
}

/* *******************************************************************
 * \brief   get a list of test cases
 * ---------
 * \remark  List of test cases is provided as lib_list queue
 * ---------
 * \return	pointer to list if successful, NULL if not
 * ******************************************************************/
struct queue_attr* test_cases__get_list(void)
{   
    int ret;
    ret = lib_list__emty(&s_test_case_list, M_LIB_LIST_CONTEXT_ID,M_LIB_LIST_BASE_ADDR);
    if (ret != EOK) {
		return NULL;
	}
    return &s_test_case_list;
}
